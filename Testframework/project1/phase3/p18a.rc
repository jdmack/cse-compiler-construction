/* Check 18 (x18a.rc) */

typedef funcptr : int (int x, int y) MYPTRALIAS;            // MYPTRALIAS is of type (funcptr : int (int, int))
MYPTRALIAS myPtr1, myPtr2;                                  

function : int addition(int x, int y) {
    return x + y;
}

function : int subtraction(int x, int y) {
    return x - y;
}

function : int main() {
    if (myPtr1 == nullptr) {
        myPtr1 = addition;                  // Okay - types match
    }
    cout << myPtr1(4, 6) << endl;
    myPtr2 = subtraction;                   // Okay - types match
    cout << myPtr2(5, 2) << endl;
    myPtr2 = myPtr1;                        // Okay - types match
    cout << myPtr2(5, 2) << endl;           
    myPtr2 = nullptr;                       // Okay - assigning pointer to nullptr
    return 0;
}
