int x7 = 7;
int x8 = 8;

////////////////////////////////////////////////////////////////////////////////
// 1. value param as value arg
////////////////////////////////////////////////////////////////////////////////
function: int foo1_1(int x) {
    cout << "received: " << x << endl;
    
}

function: int foo1_2(int x) {
    cout << "received: " << x << endl;

}

////////////////////////////////////////////////////////////////////////////////
// 2. value param as reference param
////////////////////////////////////////////////////////////////////////////////
function: int foo2_1(int x) {
    cout << "received: " << x << endl;

}

function: int foo2_2(int & x) {
    cout << "received: " << x << endl;

}

////////////////////////////////////////////////////////////////////////////////
// 3. reference param as value arg
////////////////////////////////////////////////////////////////////////////////
function: int foo3_1(int & x) {
    cout << "received: " << x << endl;

}

function: int foo3_2(int x) {
    cout << "received: " << x << endl;

}

////////////////////////////////////////////////////////////////////////////////
// 4. reference param as reference arg
////////////////////////////////////////////////////////////////////////////////
function: int foo4(int & x) {
    cout << "received: " << x << endl;

}

function: int foo4(int & x) {
    cout << "received: " << x << endl;

}

////////////////////////////////////////////////////////////////////////////////
// 5. local variable as value arg
////////////////////////////////////////////////////////////////////////////////
function: int foo5(int x) {
    cout << "received: " << x << endl;

}

////////////////////////////////////////////////////////////////////////////////
// 6. local variable as reference arg
////////////////////////////////////////////////////////////////////////////////
function: int foo6(int & x) {
    cout << "received: " << x << endl;

}

////////////////////////////////////////////////////////////////////////////////
// 7. global variable as value arg
////////////////////////////////////////////////////////////////////////////////
function: int foo7(int x) {
    cout << "received: " << x << endl;

}

////////////////////////////////////////////////////////////////////////////////
// 8. global variable as reference arg
////////////////////////////////////////////////////////////////////////////////
function: int foo8(int & x) {
    cout << "received: " << x << endl;
}


function: void main() {

    int x1 = 1;
    int x2 = 2;
    int x3 = 3;
    int x4 = 4;
    int x5 = 5;
    int x6 = 6;



}
