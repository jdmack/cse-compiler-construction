OptExpr - binary operations
Exp - Assignment
Expr0 - Or
Expr1 - And
Expr2 - |
Expr3 - ^
Expr4 - &
Expr5 - == !=
Expr6 - > < >= <=
Expr7 - + -
Expr8 - * /
Designator - *x &x +x -x !x sizeof(x) sizeof(type) (type) ++x --x
Designator2 - x.y x[y] x->y x++ x-- x(y, .., z)
Designator3 - (expr) int_constant float_constant char_constant string_constant true false nullptr this ::x x
QualIdent - ?



%O - operator
%T - Type
%D - number
%S - identifier


To Do
-----

Check #1 - Need to set isModifiable and isAddressable
Possible bug in rc.cup:
    Designator2:_1 T_LPAREN OptExprList T_RPAREN
        DoFuncCall but RESULT is set to _1 instead of the result of FuncCall
    Same for DoAssignExpr
    

Need to handle ConstSTO values
For Check #2, array's are not modifiable L-vals yet
For Check #3, there are other assignments in grammar not being assigned
    - Also, only did int->float assignability

Make sure action code is in the best place

For Check #5, two more complicated ReturnType instances not handled

I am returning STO's for stmt's that don't require it, but there isn't anything technically wrong with not using a return value, so doing it anyways to be consistent


Need to pass argument to ConstSTO when creating it to set the value
Possibly applies to Check #8, but make sure can handle hex and octal as well as decimal
    string.contains(0x)?, then stip 0x and convert to decimal
    string.startsWith(0) but isn't just 0, then stip 0 and convert to decimal


For check #6, 
Error, "../tests/phase1/p06c.rc", line 11:
  Type of return expression (bool), not assignment compatible with function's return type (int).
  Error, "", line 0:
    Return required in function, none found.
on
function : int wrong(){
    return false;
}

Should we print second error when first happened


For Type ::=
    this needs to return something that combines the other things

Increment/Decrement issue, @183

how to deal wtih +++ with no spaces
